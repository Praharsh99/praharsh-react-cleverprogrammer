{"version":3,"sources":["../../src/components/avatar/avatar.component.jsx","../../src/components/button/button.component.jsx","../../src/components/input/input.component.jsx","../../src/components/navbar/navbar.component.jsx","../../src/components/card/card.component.jsx","../../src/components/loader/loader.component.jsx","../../src/components/modal/modal.component.jsx","../../src/components/alert/alert.component.jsx","App.js","index.js"],"names":["Avatar","src","className","styles","alt","Button","children","otherProps","type","Input","variant","label","inputContainer","inputLabel","Navbar","imgSrc","sticky","component","invert","style","position","top","imgLink","isImageUrl","getWhichCompToRender","PropTypes","element","Card","Loader","height","loaderColor","width","borderColor","loaderBackgroundColor","borderTopColor","Modal","isOpen","Alert","alertTypes","App","useState","setIsOpen","count","setCount","href","display","justifyContent","zIndex","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef57c3ee.chunk.js","sourcesContent":["import React from 'react'\n\nimport styles from './avatar.styles.css'\n\nconst Avatar = ({\n  src = 'https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png'\n}) => {\n  return (\n    <div className={styles.avatar}>\n      <img src={src} alt='Avatar' />\n    </div>\n  )\n}\n\nexport default Avatar\n","import React from 'react'\n\nimport styles from './button.styles.css'\n\nconst Button = ({ children, ...otherProps }) => {\n  return (\n    <button\n      type='button'\n      {...otherProps}\n      className={`${styles.button} ${otherProps.className}`}\n    >\n      {children || 'Clever Programmer'}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\n\nimport styles from './input.styles.css'\n\nconst Input = ({\n  variant,\n  label = 'Enter Here',\n  type = 'text',\n  ...otherProps\n}) => {\n  otherProps.placeholder = 'Enter Here'\n\n  variant =\n    variant === 'bordered' || variant === 'rounded' ? variant : 'default'\n\n  type = type === 'email' || type === 'password' ? type : 'text'\n\n  return (\n    <div className={styles.inputContainer}>\n      <input\n        type={type}\n        {...otherProps}\n        className={`${styles.inputField} ${styles['inputField--' + variant]}`}\n      />\n      <label className={styles.inputLabel}>{label}</label>\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\n\nimport isImageUrl from 'is-image-url'\nimport PropTypes from 'prop-types'\n\nimport styles from './navbar.styles.css'\n\nconst Navbar = ({ imgSrc, sticky, component, invert, children }) => {\n  const getWhichCompToRender = (imgLink, component) => {\n    if (imgLink && isImageUrl(imgLink)) {\n      return <img src={imgSrc} alt='Brand' />\n    } else if (component) {\n      return false\n    } else {\n      return <h1>Brand</h1>\n    }\n  }\n\n  const style = {\n    position: 'sticky',\n    top: '0'\n  }\n\n  return (\n    <div\n      style={sticky ? style : null}\n      className={`${styles.navbar} ${invert ? styles['navbar--invert'] : ''}`}\n    >\n      <div className={styles.brandSection}>\n        {getWhichCompToRender(imgSrc, component) || component}\n      </div>\n\n      <div className={styles.linksSection}>{children}</div>\n    </div>\n  )\n}\n\nNavbar.propTypes = {\n  component: PropTypes.element\n}\n\nexport default Navbar\n","import React from 'react'\n\nimport styles from './card.styles.css'\n\nconst Card = ({ invert, children }) => {\n  return (\n    <div className={`${styles.card} ${invert ? styles['card--invert'] : ''}`}>\n      {children}\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\n\nimport styles from './loader.style.css'\n\nconst Loader = ({ height, loaderColor, loaderBackgroundColor }) => {\n  const style = {\n    height: height || '80px',\n    width: height || '80px',\n    borderColor: loaderBackgroundColor || '#000',\n    borderTopColor: loaderColor || '#fd9d00'\n  }\n\n  return (\n    <div style={style} className={styles.loader}>\n      {}\n    </div>\n  )\n}\n\nexport default Loader\n","import React from 'react'\n\nimport styles from './modal.styles.css'\n\nconst Modal = ({ isOpen = false, children, invert }) => {\n  return isOpen ? (\n    <div className={`${styles.modal} ${invert ? styles['modal--invert'] : ''}`}>\n      {children}\n    </div>\n  ) : null\n}\n\nexport default Modal\n","import React from 'react'\n\nimport styles from './alert.styles.css'\n\nconst Alert = ({ type, children }) => {\n  type =\n    type === 'error' ||\n    type === 'warning' ||\n    type === 'success' ||\n    type === 'primary' ||\n    type === 'secondary'\n      ? type\n      : 'primary'\n\n  return (\n    <div className={`${styles.alert} ${styles['alert--' + type]}`}>\n      {children || 'This is an alert message!! üí•'}\n    </div>\n  )\n}\n\nexport default Alert\n","import React, { useState } from 'react'\n\nimport {\n  Avatar,\n  Button,\n  Input,\n  Navbar,\n  Card,\n  Loader,\n  Modal,\n  Alert\n} from '@praharsh/react-cleverprogrammer'\nimport '@praharsh/react-cleverprogrammer/dist/index.css'\n\nconst alertTypes = ['primary', 'success', 'error', 'warning', 'secondary', null]\n\nconst App = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [count, setCount] = useState(5)\n\n  const handleAlert = () => {\n    setCount(count <= 4 ? count + 1 : 0)\n  }\n\n  return (\n    <>\n      {alertTypes[count] && (\n        <Alert\n          type={alertTypes[count]}\n        >{`This is a ${alertTypes[count]} type alert`}</Alert>\n      )}\n      <Navbar invert sticky imgSrc='https://i.ibb.co/RNkb01p/download.jpg'>\n        <span>About</span>\n        <span>Resources</span>\n        <span>Careers</span>\n\n        <a href='https://www.cleverprogrammer.com/'>\n          <Avatar src='https://kajabi-storefronts-production.global.ssl.fastly.net/kajabi-storefronts-production/themes/284832/settings_images/rLlCifhXRJiT0RoN2FjK_Logo_roundbackground_black.png' />\n        </a>\n      </Navbar>\n\n      <div className='container'>\n        <Card invert>\n          <Input label='This is the default input' />\n          <br />\n          <br />\n          <Input\n            label='Variant - rounded input & type - password'\n            variant='rounded'\n            type='password'\n          />\n          <br />\n          <br />\n          <Input label='Variant - bordered' variant='bordered' />\n          <br />\n          <br />\n\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button>This is a button</Button>\n            <Button\n              style={{ zIndex: '99999999' }}\n              onClick={() => setIsOpen(!isOpen)}\n            >\n              Toggle Modal\n            </Button>\n          </div>\n        </Card>\n      </div>\n\n      <Button className='alert--btn' onClick={handleAlert}>\n        Click to view Alerts {'‚ùó'}\n      </Button>\n\n      <Modal isOpen={isOpen}>\n        <div className='loader-container'>\n          <Loader loaderColor='#fff' loaderBackgroundColor='#000' />\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}